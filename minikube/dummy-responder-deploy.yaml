apiVersion: v1
kind: ConfigMap
metadata:
  name: dummy-responder-configmap
data:
  application.properties: |-
    spring.boot.admin.client.url=http://spring-boot-admin-server:8080
    spring.zipkin.baseUrl=http://zipkin.istio-system:9411
    spring.zipkin.enabled=true
    ibm.mq.connName=mq(1414)
    ibm.mq.user=admin
    ibm.mq.password=passw0rd

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-responder-deployment
spec:
  selector:
    matchLabels:
      app: dummy-responder
  replicas: 1
  template:
    metadata:
      labels:
        app: dummy-responder
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
        kiali.io/runtimes: springboot-jvm,springboot-jvm-pool,springboot-tomcat
    spec:
      containers:
        - name: dummy-responder
          image: "dummy-responder:1.0-SNAPSHOT"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
              name: http
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: minikube
            - name: MQ_USER
              valueFrom:
                secretKeyRef:
                  name: mq-secret
                  key: mq-user
            - name: MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mq-secret
                  key: mq-password
            - name: MQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: mq-configmap
                  key: mq-host
            - name: MQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: mq-configmap
                  key: mq-port
            - name: MQ_CHANNEL
              valueFrom:
                configMapKeyRef:
                  name: mq-configmap
                  key: mq-channel
            - name: MQ_QM
              valueFrom:
                configMapKeyRef:
                  name: mq-configmap
                  key: mq-qm

---

apiVersion: v1
kind: Service
metadata:
  name: dummy-responder
  labels:
    app: dummy-responder
    spring-boot: "true"
spec:
  selector:
    app: dummy-responder
  type: NodePort
  ports:
    - protocol: TCP
      name: http
      port: 8082
      targetPort: 8082
      nodePort: 30082

---
