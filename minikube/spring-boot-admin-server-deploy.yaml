kind: ConfigMap
apiVersion: v1
metadata:
  name: spring-boot-admin-server-configmap
data:
  application.yml: |-
    spring:
     cloud:
      kubernetes:
        discovery:
          all-namespaces: true
          service-labels:
            spring-boot: true

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-admin-server-deployment
spec:
  selector:
    matchLabels:
      app: spring-boot-admin-server
  replicas: 1
  template:
    metadata:
      labels:
        app: spring-boot-admin-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/actuator/prometheus"
        kiali.io/runtimes: springboot-jvm,springboot-jvm-pool,springboot-tomcat
    spec:
      containers:
        - name: spring-boot-admin-server
          image: "spring-boot-admin-server:1.0-SNAPSHOT"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http

---

apiVersion: v1
kind: Service
metadata:
  name: spring-boot-admin-server
spec:
  selector:
    app: spring-boot-admin-server
  type: NodePort
  ports:
    - protocol: TCP
      name: http
      port: 8080
      targetPort: 8080
      nodePort: 30080

---
